<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.hforum.mapper.NewsMapper">
  <resultMap id="BaseResultMap" type="com.example.hforum.model.News">
    <id column="news_id" jdbcType="BIGINT" property="newsId" />
    <result column="news_title" jdbcType="VARCHAR" property="newsTitle" />
    <result column="news_from" jdbcType="VARCHAR" property="newsFrom" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
    <result column="news_thumb" jdbcType="INTEGER" property="newsThumb" />
    <result column="news_delete" jdbcType="BIT" property="newsDelete" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.example.hforum.model.News">
    <result column="news_content" jdbcType="LONGVARCHAR" property="newsContent" />
  </resultMap>
  <sql id="Base_Column_List">
    news_id, news_title, news_from, create_time, create_user_id, release_time, news_thumb, 
    news_delete
  </sql>
  <sql id="Blob_Column_List">
    news_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from news
    where news_id = #{newsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from news
    where news_id = #{newsId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.hforum.model.News">
    insert into news (news_id, news_title, news_from, 
      create_time, create_user_id, release_time, 
      news_thumb, news_delete, news_content
      )
    values (#{newsId,jdbcType=BIGINT}, #{newsTitle,jdbcType=VARCHAR}, #{newsFrom,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, #{releaseTime,jdbcType=TIMESTAMP}, 
      #{newsThumb,jdbcType=INTEGER}, #{newsDelete,jdbcType=BIT}, #{newsContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.hforum.model.News">
    insert into news
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="newsId != null">
        news_id,
      </if>
      <if test="newsTitle != null">
        news_title,
      </if>
      <if test="newsFrom != null">
        news_from,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="newsThumb != null">
        news_thumb,
      </if>
      <if test="newsDelete != null">
        news_delete,
      </if>
      <if test="newsContent != null">
        news_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="newsId != null">
        #{newsId,jdbcType=BIGINT},
      </if>
      <if test="newsTitle != null">
        #{newsTitle,jdbcType=VARCHAR},
      </if>
      <if test="newsFrom != null">
        #{newsFrom,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newsThumb != null">
        #{newsThumb,jdbcType=INTEGER},
      </if>
      <if test="newsDelete != null">
        #{newsDelete,jdbcType=BIT},
      </if>
      <if test="newsContent != null">
        #{newsContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.hforum.model.News">
    update news
    <set>
      <if test="newsTitle != null">
        news_title = #{newsTitle,jdbcType=VARCHAR},
      </if>
      <if test="newsFrom != null">
        news_from = #{newsFrom,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="newsThumb != null">
        news_thumb = #{newsThumb,jdbcType=INTEGER},
      </if>
      <if test="newsDelete != null">
        news_delete = #{newsDelete,jdbcType=BIT},
      </if>
      <if test="newsContent != null">
        news_content = #{newsContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where news_id = #{newsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.example.hforum.model.News">
    update news
    set news_title = #{newsTitle,jdbcType=VARCHAR},
      news_from = #{newsFrom,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      news_thumb = #{newsThumb,jdbcType=INTEGER},
      news_delete = #{newsDelete,jdbcType=BIT},
      news_content = #{newsContent,jdbcType=LONGVARCHAR}
    where news_id = #{newsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.hforum.model.News">
    update news
    set news_title = #{newsTitle,jdbcType=VARCHAR},
      news_from = #{newsFrom,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      news_thumb = #{newsThumb,jdbcType=INTEGER},
      news_delete = #{newsDelete,jdbcType=BIT}
    where news_id = #{newsId,jdbcType=BIGINT}
  </update>


  <sql id="whereCondition">
    <!-- 注：CONCAT是mysql数据库中才有的 -->
    <if test="newsTitle != null and !&quot;&quot;.equals(newsTitle.trim())">
      and news_title like concat('%',trim(#{newsTitle,jdbcType=VARCHAR}),'%')
    </if>
  </sql>


  <select id="list" parameterType="com.example.hforum.model.News" resultMap="BaseResultMap">
    select * from news
    <where>
      <include refid="whereCondition"></include>
    </where>
    order by news_id asc
  </select>
</mapper>